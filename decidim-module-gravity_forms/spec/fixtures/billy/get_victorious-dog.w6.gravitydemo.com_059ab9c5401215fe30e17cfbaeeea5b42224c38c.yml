---
:scope: 
:url: http://victorious-dog.w6.gravitydemo.com/wp-content/plugins/sandbox/static/js/jquery.tipsy.js?ver=4.9.5
:body: ''
:status: 200
:method: get
:headers:
  Date: Tue, 08 May 2018 19:38:52 GMT
  Server: Apache/2.4.26 (Red Hat)
  Last-Modified: Mon, 07 May 2018 15:32:20 GMT
  ETag: '"1cdd-56b9f601e1932"'
  Accept-Ranges: bytes
  Content-Length: '7389'
  Connection: close
  Content-Type: application/javascript
:content: "// tipsy, facebook style tooltips for jquery\n// version 1.0.0a\n// (c)
  2008-2010 jason frame [jason@onehackoranother.com]\n// releated under the MIT license\n\n(function($)
  {\n    \n    function fixTitle($ele) {\n        if ($ele.attr('title') || typeof($ele.attr('original-title'))
  != 'string') {\n            $ele.attr('original-title', $ele.attr('title') || '').removeAttr('title');\n
  \       }\n    }\n    \n    function Tipsy(element, options) {\n        this.$element
  = $(element);\n        this.options = options;\n        this.enabled = true;\n        fixTitle(this.$element);\n
  \   }\n    \n    Tipsy.prototype = {\n        show: function() {\n            var
  title = this.getTitle();\n            if (title && this.enabled) {\n                var
  $tip = this.tip();\n                \n                $tip.find('.tipsy-inner')[this.options.html
  ? 'html' : 'text'](title);\n                $tip[0].className = 'tipsy'; // reset
  classname in case of dynamic gravity\n                $tip.remove().css({top: 0,
  left: 0, visibility: 'hidden', display: 'block'}).appendTo(document.body);\n                \n
  \               var pos = $.extend({}, this.$element.offset(), {\n                    width:
  this.$element[0].offsetWidth,\n                    height: this.$element[0].offsetHeight\n
  \               });\n                \n                var actualWidth = $tip[0].offsetWidth,
  actualHeight = $tip[0].offsetHeight;\n                var gravity = (typeof this.options.gravity
  == 'function')\n                                ? this.options.gravity.call(this.$element[0])\n
  \                               : this.options.gravity;\n                \n                var
  tp;\n                switch (gravity.charAt(0)) {\n                    case 'n':\n
  \                       tp = {top: pos.top + pos.height + this.options.offset, left:
  pos.left + pos.width / 2 - actualWidth / 2};\n                        break;\n                    case
  's':\n                        tp = {top: pos.top - actualHeight - this.options.offset,
  left: pos.left + pos.width / 2 - actualWidth / 2};\n                        break;\n
  \                   case 'e':\n                        tp = {top: pos.top + pos.height
  / 2 - actualHeight / 2, left: pos.left - actualWidth - this.options.offset};\n                        break;\n
  \                   case 'w':\n                        tp = {top: pos.top + pos.height
  / 2 - actualHeight / 2, left: pos.left + pos.width + this.options.offset};\n                        break;\n
  \               }\n                \n                if (gravity.length == 2) {\n
  \                   if (gravity.charAt(1) == 'w') {\n                        tp.left
  = pos.left + pos.width / 2 - 15;\n                    } else {\n                        tp.left
  = pos.left + pos.width / 2 - actualWidth + 15;\n                    }\n                }\n
  \               \n                $tip.css(tp).addClass('tipsy-' + gravity);\n                \n
  \               if (this.options.fade) {\n                    $tip.stop().css({opacity:
  0, display: 'block', visibility: 'visible'}).animate({opacity: this.options.opacity});\n
  \               } else {\n                    $tip.css({visibility: 'visible', opacity:
  this.options.opacity});\n                }\n            }\n        },\n        \n
  \       hide: function() {\n            if (this.options.fade) {\n                this.tip().stop().fadeOut(function()
  { $(this).remove(); });\n            } else {\n                this.tip().remove();\n
  \           }\n        },\n        \n        getTitle: function() {\n            var
  title, $e = this.$element, o = this.options;\n            fixTitle($e);\n            var
  title, o = this.options;\n            if (typeof o.title == 'string') {\n                title
  = $e.attr(o.title == 'title' ? 'original-title' : o.title);\n            } else
  if (typeof o.title == 'function') {\n                title = o.title.call($e[0]);\n
  \           }\n            title = ('' + title).replace(/(^\\s*|\\s*$)/, \"\");\n
  \           return title || o.fallback;\n        },\n        \n        tip: function()
  {\n            if (!this.$tip) {\n                this.$tip = $('<div class=\"tipsy\"></div>').html('<div
  class=\"tipsy-arrow\"></div><div class=\"tipsy-inner\"/></div>');\n            }\n
  \           return this.$tip;\n        },\n        \n        validate: function()
  {\n            if (!this.$element[0].parentNode) {\n                this.hide();\n
  \               this.$element = null;\n                this.options = null;\n            }\n
  \       },\n        \n        enable: function() { this.enabled = true; },\n        disable:
  function() { this.enabled = false; },\n        toggleEnabled: function() { this.enabled
  = !this.enabled; }\n    };\n    \n    $.fn.tipsy = function(options) {\n        \n
  \       if (options === true) {\n            return this.data('tipsy');\n        }
  else if (typeof options == 'string') {\n            return this.data('tipsy')[options]();\n
  \       }\n        \n        options = $.extend({}, $.fn.tipsy.defaults, options);\n
  \       \n        function get(ele) {\n            var tipsy = $.data(ele, 'tipsy');\n
  \           if (!tipsy) {\n                tipsy = new Tipsy(ele, $.fn.tipsy.elementOptions(ele,
  options));\n                $.data(ele, 'tipsy', tipsy);\n            }\n            return
  tipsy;\n        }\n        \n        function enter() {\n            var tipsy =
  get(this);\n            tipsy.hoverState = 'in';\n            if (options.delayIn
  == 0) {\n                tipsy.show();\n            } else {\n                setTimeout(function()
  { if (tipsy.hoverState == 'in') tipsy.show(); }, options.delayIn);\n            }\n
  \       };\n        \n        function leave() {\n            var tipsy = get(this);\n
  \           tipsy.hoverState = 'out';\n            if (options.delayOut == 0) {\n
  \               tipsy.hide();\n            } else {\n                setTimeout(function()
  { if (tipsy.hoverState == 'out') tipsy.hide(); }, options.delayOut);\n            }\n
  \       };\n        \n        if (!options.live) this.each(function() { get(this);
  });\n        \n        if (options.trigger != 'manual') {\n            var binder
  \  = options.live ? 'live' : 'bind',\n                eventIn  = options.trigger
  == 'hover' ? 'mouseenter' : 'focus',\n                eventOut = options.trigger
  == 'hover' ? 'mouseleave' : 'blur';\n            this[binder](eventIn, enter)[binder](eventOut,
  leave);\n        }\n        \n        return this;\n        \n    };\n    \n    $.fn.tipsy.defaults
  = {\n        delayIn: 0,\n        delayOut: 0,\n        fade: false,\n        fallback:
  '',\n        gravity: 'n',\n        html: false,\n        live: false,\n        offset:
  0,\n        opacity: 0.8,\n        title: 'title',\n        trigger: 'hover'\n    };\n
  \   \n    // Overwrite this method to provide options on a per-element basis.\n
  \   // For example, you could store the gravity in a 'tipsy-gravity' attribute:\n
  \   // return $.extend({}, options, {gravity: $(ele).attr('tipsy-gravity') || 'n'
  });\n    // (remember - do not modify 'options' in place!)\n    $.fn.tipsy.elementOptions
  = function(ele, options) {\n        return $.metadata ? $.extend({}, options, $(ele).metadata())
  : options;\n    };\n    \n    $.fn.tipsy.autoNS = function() {\n        return $(this).offset().top
  > ($(document).scrollTop() + $(window).height() / 2) ? 's' : 'n';\n    };\n    \n
  \   $.fn.tipsy.autoWE = function() {\n        return $(this).offset().left > ($(document).scrollLeft()
  + $(window).width() / 2) ? 'e' : 'w';\n    };\n    \n})(jQuery);\n"
