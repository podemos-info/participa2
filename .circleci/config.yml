---

version: 2

jobs:
  coverage-setup:
    docker:
      - image: circleci/ruby:2.5

    steps:
      - run:
          name: Download Code Climate test-reporter
          command: |
            curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-0.6.3-linux-amd64 > /tmp/cc-test-reporter
            chmod +x /tmp/cc-test-reporter

      - persist_to_workspace:
          root: /tmp
          paths:
            - cc-test-reporter

  coverage-upload:
    docker:
      - image: circleci/ruby:2.5

    steps:
      - attach_workspace:
          at: /tmp

      - run:
          name: Upload coverage results to Code Climate
          command: |
            /tmp/cc-test-reporter sum-coverage /tmp/codeclimate.*.json --parts 5 --output /tmp/codeclimate.total.json
            /tmp/cc-test-reporter upload-coverage --input /tmp/codeclimate.total.json

  main:
    docker:
      - image: decidim/decidim@sha256:c0588c1f425fa2433733978fbfa147b4e6cc54be9f6ac4583920158d6a408972
        environment:
          DATABASE_USERNAME: postgres
          CENSUS_URL: http://mycensus:3001

      - image: postgres
        environment:
          POSTGRES_USER: postgres

    steps:
      - checkout

      - attach_workspace:
          at: /tmp

      - restore_cache:
          keys:
            - bundler-dependencies-{{ checksum "Gemfile.lock" }}

      - run:
          name: Install dependencies
          command: bundle install

      - save_cache:
          key: bundler-dependencies-{{ checksum "Gemfile.lock" }}
          paths:
            - /usr/local/bundle

      - restore_cache:
          keys:
            - npm-dependencies-{{ checksum "package-lock.json" }}

      - run:
          name: Install npm dependencies
          command: npm install

      - save_cache:
          key: npm-dependencies-{{ checksum "package-lock.json" }}
          paths:
            - node_modules

      - run:
          name: Create and migrate DB
          command: bin/rails db:create db:migrate

      - run:
          name: Run tests
          command: SIMPLECOV=true bin/rspec

      - run:
          name: Generate code coverage report
          command: /tmp/cc-test-reporter format-coverage --output /tmp/codeclimate.$CIRCLE_JOB.json

      - persist_to_workspace:
          root: /tmp
          paths:
            - codeclimate.*.json

      - run:
          name: Run rubocop
          command: bin/rubocop

      - run:
          name: Run npm lints
          command: npm run lint

      - add_ssh_keys:
          fingerprints:
            - "43:69:49:83:52:61:1b:5c:e4:2c:3c:2b:ea:7b:8f:32"

      - deploy:
          command: bin/deploy-staging.sh

  census_connector:
    docker:
      - image: decidim/decidim@sha256:c0588c1f425fa2433733978fbfa147b4e6cc54be9f6ac4583920158d6a408972
        environment:
          DATABASE_USERNAME: postgres
          CENSUS_URL: http://mycensus:3001

      - image: postgres
        environment:
          POSTGRES_USER: postgres

    steps:
      - checkout

      - attach_workspace:
          at: /tmp

      - restore_cache:
          keys:
            - bundler-dependencies-{{ checksum "Gemfile.lock" }}

      - run:
          name: Install dependencies
          command: bundle install

      - save_cache:
          key: bundler-dependencies-{{ checksum "Gemfile.lock" }}
          paths:
            - /usr/local/bundle

      - run:
          name: Wait for db
          command: dockerize -wait tcp://localhost:5432 -timeout 1m

      - run:
          name: Generate test app
          command: cd decidim-module-census_connector && bundle exec rake test_app

      - run:
          name: Run RSpec tests
          command: cd decidim-module-census_connector && SIMPLECOV=true bundle exec rspec

      - run:
          name: Generate code coverage report
          command: /tmp/cc-test-reporter format-coverage --output /tmp/codeclimate.$CIRCLE_JOB.json

      - persist_to_workspace:
          root: /tmp
          paths:
            - codeclimate.*.json

      - store_artifacts:
          path: /app/decidim-module-census_connector/decidim_dummy_app/tmp/screenshots

  crowdfundings:
    docker:
      - image: decidim/decidim@sha256:c0588c1f425fa2433733978fbfa147b4e6cc54be9f6ac4583920158d6a408972
        environment:
          DATABASE_USERNAME: postgres
          CENSUS_URL: http://mycensus:3001

      - image: postgres
        environment:
          POSTGRES_USER: postgres

    steps:
      - checkout

      - attach_workspace:
          at: /tmp

      - restore_cache:
          keys:
            - bundler-dependencies-{{ checksum "Gemfile.lock" }}

      - run:
          name: Install dependencies
          command: bundle install

      - save_cache:
          key: bundler-dependencies-{{ checksum "Gemfile.lock" }}
          paths:
            - /usr/local/bundle

      - run:
          name: Wait for db
          command: dockerize -wait tcp://localhost:5432 -timeout 1m

      - run:
          name: Generate test app
          command: cd decidim-module-crowdfundings && bundle exec rake test_app

      - run:
          name: Run RSpec tests
          command: cd decidim-module-crowdfundings && SIMPLECOV=true bundle exec rspec

      - run:
          name: Generate code coverage report
          command: /tmp/cc-test-reporter format-coverage --output /tmp/codeclimate.$CIRCLE_JOB.json

      - persist_to_workspace:
          root: /tmp
          paths:
            - codeclimate.*.json

      - store_artifacts:
          path: /app/decidim-module-crowdfundings/decidim_dummy_app/tmp/screenshots

  gravity_forms:
    docker:
      - image: decidim/decidim@sha256:c0588c1f425fa2433733978fbfa147b4e6cc54be9f6ac4583920158d6a408972
        environment:
          DATABASE_USERNAME: postgres

      - image: postgres
        environment:
          POSTGRES_USER: postgres

    steps:
      - checkout

      - attach_workspace:
          at: /tmp

      - restore_cache:
          keys:
            - bundler-dependencies-{{ checksum "Gemfile.lock" }}

      - run:
          name: Install dependencies
          command: bundle install

      - save_cache:
          key: bundler-dependencies-{{ checksum "Gemfile.lock" }}
          paths:
            - /usr/local/bundle

      - run:
          name: Install firefox
          command: |
            echo "deb http://ftp.us.debian.org/debian/ sid main" > /etc/apt/sources.list.d/firefox.list
            apt-get update
            apt-get install -y firefox

      - run:
          name: Install geckodriver
          command: bin/install-geckodriver.sh

      - run:
          name: Wait for db
          command: dockerize -wait tcp://localhost:5432 -timeout 1m

      - run:
          name: Generate test app
          command: cd decidim-module-gravity_forms && bundle exec rake test_app

      - run:
          name: Run RSpec tests
          command: cd decidim-module-gravity_forms && SIMPLECOV=true bundle exec rspec

      - run:
          name: Generate code coverage report
          command: /tmp/cc-test-reporter format-coverage --output /tmp/codeclimate.$CIRCLE_JOB.json

      - persist_to_workspace:
          root: /tmp
          paths:
            - codeclimate.*.json

      - store_artifacts:
          path: /app/decidim-module-gravity_forms/decidim_dummy_app/tmp/screenshots

  votings:
    docker:
      - image: decidim/decidim@sha256:c0588c1f425fa2433733978fbfa147b4e6cc54be9f6ac4583920158d6a408972
        environment:
          DATABASE_USERNAME: postgres

      - image: postgres
        environment:
          POSTGRES_USER: postgres

    steps:
      - checkout

      - attach_workspace:
          at: /tmp

      - restore_cache:
          keys:
            - bundler-dependencies-{{ checksum "Gemfile.lock" }}

      - run:
          name: Install dependencies
          command: bundle install

      - save_cache:
          key: bundler-dependencies-{{ checksum "Gemfile.lock" }}
          paths:
            - /usr/local/bundle

      - run:
          name: Wait for db
          command: dockerize -wait tcp://localhost:5432 -timeout 1m

      - run:
          name: Generate test app
          command: cd decidim-module-votings && bundle exec rake test_app

      - run:
          name: Run RSpec tests
          command: cd decidim-module-votings && SIMPLECOV=true bundle exec rspec

      - run:
          name: Generate code coverage report
          command: /tmp/cc-test-reporter format-coverage --output /tmp/codeclimate.$CIRCLE_JOB.json

      - persist_to_workspace:
          root: /tmp
          paths:
            - codeclimate.*.json

      - store_artifacts:
          path: /app/decidim-module-votings/decidim_dummy_app/tmp/screenshots

workflows:
  version: 2

  test_and_deploy:
    jobs:
      - coverage-setup

      - census_connector:
          requires:
            - coverage-setup

      - crowdfundings:
          requires:
            - coverage-setup

      - gravity_forms:
          requires:
            - coverage-setup

      - votings:
          requires:
            - coverage-setup

      - main:
          requires:
            - coverage-setup

      - coverage-upload:
          requires:
            - census_connector
            - crowdfundings
            - gravity_forms
            - votings
            - main
